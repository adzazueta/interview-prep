name: Deploy sequence for interview prep app.

on:
  workflow_dispatch:

jobs:
  build:
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Create ENV file
        run: |
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
          echo "GOOGLE_GENERATIVE_AI_API_KEY=${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "NEXT_PUBLIC_VAPI_WEB_TOKEN=${{ secrets.NEXT_PUBLIC_VAPI_WEB_TOKEN }}" >> .env
          echo "NEXT_PUBLIC_VAPI_WORKFLOW_ID=${{ secrets.NEXT_PUBLIC_VAPI_WORKFLOW_ID }}" >> .env
      - name: Build docker image
        run: docker build -t adzazueta/interview-prep .
      - name: Login to docker hub
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Publish image to docker hub
        run: docker push adzazueta/interview-prep:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull adzazueta/interview-prep:latest
      - name: Delete old container
        run: docker rm -f interview-prep-container
      - name: Run docker container
        run: docker run -d -p 3000:3000 --name interview-prep-container adzazueta/interview-prep
